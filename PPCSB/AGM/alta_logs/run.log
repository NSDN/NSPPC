> alta::tcl_whisper "Cmd : [alta::prog_path] [alta::prog_version]([alta::prog_subversion])\n"
Cmd : D:/Dev/Supra/bin/af.exe 2021.06.b0(66adbd53)
> alta::tcl_whisper "Args : [string map {\{ \" \} \"} $tcl_cmd_args]\n"
Args : -X "set QUARTUS_SDC true" -X "set FITTING timing_more" -X "set FITTER hybrid" -X "set EFFORT highest" -X "set HOLDX default" -X "set SKEW   basic" -X "set MODE QUARTUS" -X "set FLOW ALL" -F ./af_run.tcl
> 
> set_seed_rand $SEED
> set ar_timing_derate ${TIMING_DERATE}
> 
> date_time
Sat Oct 22 17:21:52 2022
> if { [file exists "./${DESIGN}.pre.asf"] } {
  alta::tcl_highlight "Using pre-ASF file ${DESIGN}.pre.asf.\n"
  source "./${DESIGN}.pre.asf"
}
Using pre-ASF file PPCSB.pre.asf.
> 
> eval "load_architect ${no_route} -type ${DEVICE} 1 1 1000 1000"
Total IO  : 104
Total Pin : 80/4
Top array is built.
Loading architect libraries...
## CPU time: 0:0:0, REAL time: 0:0:0
## Memory Usage: 28MB (28MB)
Loading route table...
## CPU time: 0:0:0, REAL time: 0:0:0
## Memory Usage: 47MB (47MB)
> foreach ip_file $IP_FILES { read_ip $ip_file; }
> 
> set LOAD_DB    false
> set LOAD_PLACE false
> set LOAD_ROUTE false
> if { $FLOW == "LOAD" || $FLOW == "CHECK" || $FLOW == "PROBE" } {
  set LOAD_DB    true
  set LOAD_PLACE true
  set LOAD_ROUTE true
} elseif { $FLOW == "R" || $FLOW == "ROUTE" } {
  set LOAD_DB    true
  set LOAD_PLACE true
}
> 
> set ORIGINAL_QSF "E:/Works/NSPPC/PPCSB/./PPCSB.qsf"
> set ORIGINAL_PIN "E:/Works/NSPPC/PPCSB/output_files/PPCSB.pin"
> 
> #################################################################################
> 
> if { $FLOW == "GEN" } {
  if { ! [info exists CONFIG_BITS] } {
    set CONFIG_BITS "${RESULT_DIR}/${DESIGN}.bin"
  }
  if { [llength $CONFIG_BITS] > 1 } {
    if { ! [info exists BOOT_BINARY] } {
      set BOOT_BINARY "${RESULT_DIR}/${DESIGN}_boot.bin"
    }
    if { ! [info exists CONFIG_ADDRESSES] } {
      set CONFIG_ADDRESSES ""
    }
    generate_binary -master $BOOT_BINARY -inputs $CONFIG_BITS -address $CONFIG_ADDRESSES
  } else {
    set CONFIG_ROOT   [file rootname [lindex $CONFIG_BITS 0]]
    set SLAVE_RBF     "${CONFIG_ROOT}_slave.rbf"
    set MASTER_BINARY "${CONFIG_ROOT}_master.bin"
    if { [file exists [lindex $CONFIG_BITS 0]] } {
      generate_binary -slave  $SLAVE_RBF     -inputs [lindex $CONFIG_BITS 0] -reverse
      generate_binary -master $MASTER_BINARY -inputs [lindex $CONFIG_BITS 0]
    }
    if { ! [info exists BOOT_BINARY] } {
      set BOOT_BINARY $MASTER_BINARY
    }
  }
  set PRG_FILE [file rootname $BOOT_BINARY].prg
  set AS_FILE  [file rootname $BOOT_BINARY]_as.prg
  generate_programming_file $BOOT_BINARY -erase $ERASE \
                            -program $PROGRAM -verify $VERIFY -offset $OFFSET \
                            -prg $PRG_FILE -as $AS_FILE
  exit
}
> 
> if { $LOAD_DB } {
  load_db -top ${TOP_MODULE}
  set sdc "./${DESIGN}.adc"
  if { ! [file exists $sdc] } { set sdc "./${DESIGN}.sdc"; }
  if { [file exists $sdc] } { read_sdc $sdc; }

} elseif { $MODE == "QUARTUS" } {
  set verilog ${DESIGN}.vo
  set is_migrated false
  if { ! [file exists $verilog] } {
    set verilog "./simulation/modelsim/${DESIGN}.vo"
    set is_migrated true
  }
  if { ! [file exists $verilog] } {
    error "Can not find design verilog file $verilog"
  }
  alta::tcl_highlight "Using design verilog file $verilog.\n"
  set ret [read_design -top ${TOP_MODULE} -ve $VE_FILE -qsf $ORIGINAL_QSF $verilog -hierachy 1]
  if { !$ret } { exit -1; }

  set sdc "./${DESIGN}.adc"
  if { ! [file exists $sdc] } { set sdc "./${DESIGN}.sdc"; }
  if { ! [file exists $sdc] } {
    alta::tcl_warn "Can not find design SDC file $sdc"
  } else {
    alta::tcl_highlight "Using design SDC file $sdc.\n"
    read_sdc $sdc
  }

} elseif { $MODE == "SYNPLICITY" || $MODE == "NATIVE" } {
  set db_gclk_assignment_level 2
  set verilog ${DESIGN}.vqm
  set is_migrated false
  if { ! [file exists $verilog] } {
    error "Can not find design verilog file $verilog"
  }

  set sdc "./${DESIGN}.adc"
  if { ! [file exists $sdc] } { set sdc "./${DESIGN}.sdc"; }
  alta::tcl_highlight "Using design verilog file $verilog.\n"
  if { ! [file exists $sdc] } {
    alta::tcl_warn "Can not find design SDC file $sdc"
    set ret [read_design_and_pack -sdc $sdc  -top ${TOP_MODULE} $verilog]
  } else {
    alta::tcl_highlight "Using design SDC file $sdc.\n"
    set ret [read_design_and_pack -top ${TOP_MODULE} $verilog]
  }
  if { !$ret } { exit -1; }

} else {
  error "Unsupported mode $MODE"
}
Using design verilog file ./simulation/modelsim/PPCSB.vo.
Preparing design...
## CPU time: 0:0:0, REAL time: 0:0:0
## Memory Usage: 47MB (47MB)
Pseudo pack design...
Packing Statistics
 Total      Logics : 179/256 ( 69%)
 Total        LUTs : 178/256 ( 69%)
 Total   Registers :  94/256 ( 36%)
 Total        Pins :  68/ 80 ( 85%)
 Global    Signals :   4/  4 (100%)
                 CLK~inputclkctrl_outclk (from:             CLK~input_o)
                 DBG~inputclkctrl_outclk (from:             DBG~input_o)
      beep_beep|CLK_DIV_2~clkctrl_outclk (from:   beep_beep|CLK_DIV_2~q)
                      iWR~clkctrl_outclk (from:             iWR~combout)
 Total Lonely   Datain   : 0
 Total Lonely   Register : 1
 Total LUT-FF   Pairs    : 82
 Total Register Packings : 11
 Registers with synchronous    reset : 0
 Registers with asynchronous   reset : 65
 Registers with sync and async reset : 0
## CPU time: 0:0:0, REAL time: 0:0:0
## Memory Usage: 48MB (48MB)
Filter verilog...
## CPU time: 0:0:0, REAL time: 0:0:0
## Memory Usage: 48MB (48MB)
Read DB design...
## CPU time: 0:0:0, REAL time: 0:0:1
## Memory Usage: 50MB (50MB)
Process design...
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[7]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[5]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[11]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[6]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[2]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to CKO~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[3]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[0]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[10]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LED[0]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[14]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_RST~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[9]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[3]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[2]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[0]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[1]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[6]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[4]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[5]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to DATA[7]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[3]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[6]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[1]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[5]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[7]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to BEEP_L~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[2]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[4]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_DATA[0]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_CS~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to BEEP_R~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_A0~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LED[1]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_RD~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_WR~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[1]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[12]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[4]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to LCD_BLK~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to BUSREQ~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[8]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to KEY_C[13]~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to INT~output false
> set_instance_assignment -name ENABLE_OPEN_DRAIN -to WAIT~output false
Info: Found GCLK net beep_beep|CLK_DIV_2~clkctrl_outclk (1).
Info: Found GCLK net DBG~inputclkctrl_outclk (17).
Info: Found GCLK net iWR~clkctrl_outclk (7).
Info: Found GCLK net CLK~inputclkctrl_outclk (11).
## CPU time: 0:0:0, REAL time: 0:0:0
## Memory Usage: 51MB (51MB)
Using design SDC file ./PPCSB.sdc.
derive_pll_clocks -create_base_clocks
> 
> if { [info exists FITTING] } {
  if { $FITTING == "Auto" } { set FITTING auto; }
  set_mode -fitting $FITTING
}
>  set pl_criticality_wratio  "5.00 5.00 5.00 1.00"
> #set pl_max_iter_eco        "10 20 300 40 3  100 100 1"
> ##et pl_eco_slack_crit      "99999. 1.00  0.10 8 0.03 35 0.01 170"
> 
> ##et pl_priority_compare  "2 2 2 3"
> #set pl_priority_result   "2 1 1 0"
> #set pl_priority_pass     "2 1 1 0"
> #set pl_swap_cost_margin       "200.0  0.0  200.0  0.0  200.0  0.0   0.00  0.0"
>  set pl_swap_wirelength_margin "200.0  0.0  200.0  0.0  200.0  0.0   020.0 -0.3  2000. 1.50"
>  set pl_swap_congestion_margin "100.0  0.0  100.0  0.0  100.0  0.0   010.0 -0.3  1000. 1.25"
> #set pl_criticality_beta "1.0 3.0 1.0  1.0 3.0 1.0  1.0 3.0 1.0  99999 3.0 3.0"
> 
>  set rt_retiming_idx         5
>  set rt_converge_accelerator "3 1 0 0"
> #set rt_pres_cost_ratio      "1.00 1.50  2.00 2.50"
>  set rt_dly_ratio            "0.55 0.35 0.30  0.50 0.50 0.30"
>  set rt_reroute_max_iter     "6  4 5  7 9  12"
>  set rt_reroute_start_iter   "0  0 1  2 4  0 "
>  set rt_quick_converge_ratio 0.00
> if { [info exists FITTER] } {
  if { $FITTER == "Auto" } {
    if { $MODE == "QUARTUS" } { set FITTER hybrid; } else { set FITTER full; }
  }
  if { $MODE == "SYNPLICITY" || $MODE == "NATIVE" } { set FITTER full; }
  set_mode -fitter $FITTER
}
>  set pl_reuse_existing_placement true
>  set pl_fix_bram_cells 0
>  set pl_fix_mult_cells 0
> if { [info exists EFFORT] } { set_mode -effort $EFFORT; }
> #set pl_neighbor_swap_range "2  6  6  3 "
>  set pl_pass_result "1 1 1 1"
>  set pl_max_pass    "2 1 1 1 1"
>  set pl_max_iter       10
>  set pl_max_iter_part  20
>  set pl_max_iter_final 20
>  set pl_max_iter_legal 10
>  set pl_max_iter_touch 00
> #set pl_neighbor_swap_range "2  6  6  3 "
> #set pl_spread_swap_max_iter "3 5  5 4"
> #set pl_use_initial_place_once 0
>  set rt_min_converge "7"
>  set rt_optimize_max "3"
> if { [info exists SKEW  ] } { set_mode -skew   $SKEW  ; }
>  set pl_useful_skew_level -1
>  set rt_useful_skew_level 0
>  set rt_useful_skew_bram         true
>  set rt_useful_skew_io           false
>  set rt_useful_skew_io_ireg      false
>  set rt_useful_skew_io_oreg      false
>  set rt_useful_skew_output_io    false
>  set rt_useful_skew_input_io     false
>  set rt_useful_skew_unconstraint "false false"
>  set rt_useful_skew_max                "0 100"
>  set rt_skew_crit_minmax               "0.00 1.00"
> #set rt_useful_skew_setup_slac_margin  "1.00 1.00  1.00 1.00  1.00 0.10 0.50 0.10 0.70 0.10  1.00"
> #set rt_useful_skew_hold_slack_margin  "0.10 0.10  0.30 0.30  0.30 0.30"
> #set rt_useful_skew_hold_slack_ratio   "0.05 0.05  0.10 0.10  0.10 0.10"
> if { [info exists SKOPE ] } { set_mode -skope  $SKOPE ; }
> if { [info exists HOLDX ] } { set_mode -holdx  $HOLDX; }
> # Minimal logical slice hold fix, only by routing to bram/mult, no IO delay
> 
>  set ta_cross_clock_slack "2 0"
> 
> #set pl_max_iter_hold_fix "30 1 3"
> #set pl_hold_slack_margin  0.2
> #set pl_setup_slack_margin "0.5 -1000."
> #set pl_net_hold_fix_target "alta_bram alta_bram9k alta_mult"
> 
>  set rt_hold_slack_margin  "0.2 0.2    0.2 0.2    0.2 0.7   -1000. 0.0"
>  set rt_setup_slack_margin "0.5 -1000. 0.5 -1000. 0.0 -1000."
> #set rt_net_hold_crit_minmax "0.5 0.5"
>  set rt_net_hold_budget_method 0
>  set rt_net_hold_fix_target "alta_bram alta_bram9k alta_mult"
> 
> #set pl_net_hold_fix_clock false
> #set pl_net_hold_fix_auto  false
> #set pl_net_hold_fix_io    false
> #set rt_net_hold_fix_start false
> #set rt_net_hold_fix_clock false
> #set rt_net_hold_fix_auto  false
> #set rt_net_hold_fix_io    false
> if { [info exists TUNING] } { set_mode -tuning $TUNING; }
> if { [info exists TARGET] } { set_mode -target $TARGET; }
> if { [info exists PRESET] } { set_mode -preset $PRESET; }
> if { [info exists ADJUST] } { set pl_criticality_wadjust $ADJUST; }
> 
> set alta_aqf $::alta_work/alta.aqf
> if { $LOAD_DB } {
  # Empty
} elseif { true } {
  if { [file exists $VE_FILE] } {
    set ORIGINAL_PIN ""
  } elseif { ! [file exists $ORIGINAL_PIN] } {
    if { $is_migrated } {
      error "Can not find design PIN file $ORIGINAL_PIN, please compile design first"
    }
    set ORIGINAL_PIN ""
  }
  if { [file exists $ORIGINAL_QSF] } {
    alta::convert_quartus_settings_cmd $ORIGINAL_QSF $ORIGINAL_PIN $alta_aqf
  } elseif { $is_migrated } {
    error "Can not find design exported QSF file $ORIGINAL_QSF, please export assigments first"
  }
}
> if { [file exists "$alta_aqf"] } {
  alta::tcl_highlight "Using AQF file $alta_aqf.\n"
  source "$alta_aqf"
}
Using AQF file ./alta_db/alta.aqf.
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[0]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[1]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[2]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[3]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[4]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[5]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[6]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to ADDR[7]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to BEEP_L
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to BEEP_R
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to BUSACK
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to BUSREQ
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to CHRG
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to CKO
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to CLK
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[0]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[1]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[2]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[3]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[4]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[5]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[6]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DATA[7]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to DBG
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to INT
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to IORQ
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[0]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[10]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[11]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[12]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[13]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[14]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[1]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[2]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[3]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[4]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[5]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[6]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[7]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[8]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_C[9]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_R[0]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_R[1]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_R[2]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_R[3]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to KEY_R[4]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_A0
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_BLK
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_CS
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[0]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[1]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[2]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[3]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[4]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[5]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[6]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_DATA[7]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_RD
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_RST
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LCD_WR
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LED[0]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to LED[1]
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to MREQ
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to RD
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to SDET
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to STDBY
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to WAIT
> set_instance_assignment -name IO_STANDARD "3.3-V LVTTL" -to WR
> set_location_assignment PIN_21 -to ADDR[0]
> set_location_assignment PIN_20 -to ADDR[1]
> set_location_assignment PIN_19 -to ADDR[2]
> set_location_assignment PIN_18 -to ADDR[3]
> set_location_assignment PIN_17 -to ADDR[4]
> set_location_assignment PIN_16 -to ADDR[5]
> set_location_assignment PIN_15 -to ADDR[6]
> set_location_assignment PIN_14 -to ADDR[7]
> set_location_assignment PIN_73 -to BEEP_L
> set_location_assignment PIN_71 -to BEEP_R
> set_location_assignment PIN_91 -to BUSACK
> set_location_assignment PIN_92 -to BUSREQ
> set_location_assignment PIN_51 -to CHRG
> set_location_assignment PIN_69 -to CKO
> set_location_assignment PIN_12 -to CLK
> set_location_assignment PIN_8 -to DATA[0]
> set_location_assignment PIN_7 -to DATA[1]
> set_location_assignment PIN_6 -to DATA[2]
> set_location_assignment PIN_5 -to DATA[3]
> set_location_assignment PIN_4 -to DATA[4]
> set_location_assignment PIN_3 -to DATA[5]
> set_location_assignment PIN_2 -to DATA[6]
> set_location_assignment PIN_55 -to DATA[7]
> set_location_assignment PIN_64 -to DBG
> set_location_assignment PIN_95 -to INT
> set_location_assignment PIN_98 -to IORQ
> set_location_assignment PIN_26 -to KEY_C[0]
> set_location_assignment PIN_38 -to KEY_C[10]
> set_location_assignment PIN_39 -to KEY_C[11]
> set_location_assignment PIN_40 -to KEY_C[12]
> set_location_assignment PIN_41 -to KEY_C[13]
> set_location_assignment PIN_42 -to KEY_C[14]
> set_location_assignment PIN_27 -to KEY_C[1]
> set_location_assignment PIN_28 -to KEY_C[2]
> set_location_assignment PIN_29 -to KEY_C[3]
> set_location_assignment PIN_30 -to KEY_C[4]
> set_location_assignment PIN_33 -to KEY_C[5]
> set_location_assignment PIN_34 -to KEY_C[6]
> set_location_assignment PIN_35 -to KEY_C[7]
> set_location_assignment PIN_36 -to KEY_C[8]
> set_location_assignment PIN_37 -to KEY_C[9]
> set_location_assignment PIN_43 -to KEY_R[0]
> set_location_assignment PIN_44 -to KEY_R[1]
> set_location_assignment PIN_47 -to KEY_R[2]
> set_location_assignment PIN_48 -to KEY_R[3]
> set_location_assignment PIN_49 -to KEY_R[4]
> set_location_assignment PIN_76 -to LCD_A0
> set_location_assignment PIN_75 -to LCD_BLK
> set_location_assignment PIN_90 -to LCD_CS
> set_location_assignment PIN_78 -to LCD_DATA[0]
> set_location_assignment PIN_81 -to LCD_DATA[1]
> set_location_assignment PIN_82 -to LCD_DATA[2]
> set_location_assignment PIN_83 -to LCD_DATA[3]
> set_location_assignment PIN_84 -to LCD_DATA[4]
> set_location_assignment PIN_85 -to LCD_DATA[5]
> set_location_assignment PIN_86 -to LCD_DATA[6]
> set_location_assignment PIN_87 -to LCD_DATA[7]
> set_location_assignment PIN_88 -to LCD_RD
> set_location_assignment PIN_89 -to LCD_RST
> set_location_assignment PIN_77 -to LCD_WR
> set_location_assignment PIN_62 -to LED[0]
> set_location_assignment PIN_61 -to LED[1]
> set_location_assignment PIN_97 -to MREQ
> set_location_assignment PIN_99 -to RD
> set_location_assignment PIN_53 -to SDET
> set_location_assignment PIN_52 -to STDBY
> set_location_assignment PIN_96 -to WAIT
> set_location_assignment PIN_100 -to WR
> if { [file exists "./${DESIGN}.asf"] } {
  alta::tcl_highlight "Using ASF file ${DESIGN}.asf.\n"
  source "./${DESIGN}.asf"
}
Using ASF file PPCSB.asf.
> set_location_assignment -to CLK PIN_12
> set_location_assignment -to DBG PIN_64
> set_location_assignment -to CKO PIN_69
> set_location_assignment -to ADDR[7] PIN_14
> set_location_assignment -to ADDR[6] PIN_15
> set_location_assignment -to ADDR[5] PIN_16
> set_location_assignment -to ADDR[4] PIN_17
> set_location_assignment -to ADDR[3] PIN_18
> set_location_assignment -to ADDR[2] PIN_19
> set_location_assignment -to ADDR[1] PIN_20
> set_location_assignment -to ADDR[0] PIN_21
> set_location_assignment -to DATA[7] PIN_1
> set_location_assignment -to DATA[6] PIN_2
> set_location_assignment -to DATA[5] PIN_3
> set_location_assignment -to DATA[4] PIN_4
> set_location_assignment -to DATA[3] PIN_5
> set_location_assignment -to DATA[2] PIN_6
> set_location_assignment -to DATA[1] PIN_7
> set_location_assignment -to DATA[0] PIN_8
> set_location_assignment -to RD PIN_99
> set_location_assignment -to WR PIN_100
> set_location_assignment -to IORQ PIN_98
> set_location_assignment -to MREQ PIN_97
> set_location_assignment -to BUSREQ PIN_92
> set_location_assignment -to BUSACK PIN_91
> set_location_assignment -to INT PIN_95
> set_location_assignment -to WAIT PIN_96
> set_location_assignment -to LCD_CS PIN_90
> set_location_assignment -to LCD_RST PIN_89
> set_location_assignment -to LCD_RD PIN_88
> set_location_assignment -to LCD_WR PIN_77
> set_location_assignment -to LCD_A0 PIN_76
> set_location_assignment -to LCD_DATA[7] PIN_87
> set_location_assignment -to LCD_DATA[6] PIN_86
> set_location_assignment -to LCD_DATA[5] PIN_85
> set_location_assignment -to LCD_DATA[4] PIN_84
> set_location_assignment -to LCD_DATA[3] PIN_83
> set_location_assignment -to LCD_DATA[2] PIN_82
> set_location_assignment -to LCD_DATA[1] PIN_81
> set_location_assignment -to LCD_DATA[0] PIN_78
> set_location_assignment -to LCD_BLK PIN_75
> set_location_assignment -to KEY_C[14] PIN_42
> set_location_assignment -to KEY_C[13] PIN_41
> set_location_assignment -to KEY_C[12] PIN_40
> set_location_assignment -to KEY_C[11] PIN_39
> set_location_assignment -to KEY_C[10] PIN_38
> set_location_assignment -to KEY_C[9] PIN_37
> set_location_assignment -to KEY_C[8] PIN_36
> set_location_assignment -to KEY_C[7] PIN_35
> set_location_assignment -to KEY_C[6] PIN_34
> set_location_assignment -to KEY_C[5] PIN_33
> set_location_assignment -to KEY_C[4] PIN_30
> set_location_assignment -to KEY_C[3] PIN_29
> set_location_assignment -to KEY_C[2] PIN_28
> set_location_assignment -to KEY_C[1] PIN_27
> set_location_assignment -to KEY_C[0] PIN_26
> set_location_assignment -to KEY_R[4] PIN_49
> set_location_assignment -to KEY_R[3] PIN_48
> set_location_assignment -to KEY_R[2] PIN_47
> set_location_assignment -to KEY_R[1] PIN_44
> set_location_assignment -to KEY_R[0] PIN_43
> set_location_assignment -to BEEP_L PIN_73
> set_location_assignment -to BEEP_R PIN_71
> set_location_assignment -to SDET PIN_53
> set_location_assignment -to STDBY PIN_52
> set_location_assignment -to CHRG PIN_51
> set_location_assignment -to LED[1] PIN_61
> set_location_assignment -to LED[0] PIN_62
> set_instance_assignment -name IO_STANDARD -to CLK "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DBG "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ERST "3.3-V LVTTL"
Warn: [set_instance_assignment] Empty -to specified, objects ERST are not recognized.
> set_instance_assignment -name IO_STANDARD -to ADDR[7] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ADDR[6] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ADDR[5] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ADDR[4] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ADDR[3] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ADDR[2] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ADDR[1] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to ADDR[0] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[7] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[6] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[5] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[4] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[3] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[2] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[1] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to DATA[0] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to RD "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to WR "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to IORQ "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to MREQ "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to BUSREQ "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to BUSACK "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to INT "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to WAIT "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_CS "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_RST "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_RD "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_WR "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_A0 "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[7] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[6] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[5] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[4] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[3] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[2] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[1] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_DATA[0] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LCD_BLK "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[14] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[13] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[12] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[11] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[10] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[9] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[8] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[7] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[6] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[5] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[4] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[3] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[2] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[1] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_C[0] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_R[4] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_R[3] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_R[2] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_R[1] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to KEY_R[0] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to BEEP_L "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to BEEP_R "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to SDET "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to STDBY "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to CHRG "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LED[1] "3.3-V LVTTL"
> set_instance_assignment -name IO_STANDARD -to LED[0] "3.3-V LVTTL"
> 
> if { $FLOW == "PROBE" } {
  set ret [place_pseudo -user_io -place_io -place_pll -place_gclk]
  if { !$ret } { exit -1 }

  set force ""
  if { [info exists PROBE_FORCE] && $PROBE_FORCE } { set force "-force" }
  eval "probe_design -froms {${PROBE_FROMS}} -tos {${PROBE_TOS}} ${force}"

} elseif { $FLOW == "CHECK" } {
  set ret [place_pseudo -user_io -place_io -place_pll -place_gclk]
  if { !$ret } { exit -1 }

  if { [file exists "./${DESIGN}.chk"] } {
    alta::tcl_highlight "Using CHK file ${DESIGN}.chk.\n"
    source "./${DESIGN}.chk"
    place_design -dry
    check_design -rule led_guide
  } else {
    error "Can not find design CHECK file ${DESIGN}.chk"
  }

} else {
  set ret [place_pseudo -user_io -place_io -place_pll -place_gclk -warn_io]
  if { !$ret } { exit -1 }
  if { $FLOW == "PACK" } { exit }

  set org_place ""
  set load_place ""
  set load_route ""
  set quiet ""
  if {  $ORG_PLACE } { set  org_place "-org_place" ; }
  if { $LOAD_PLACE } { set load_place "-load_place"; }
  if { $LOAD_ROUTE } { set load_route "-load_route"; }
  eval "place_and_route_design $org_place $load_place $load_route \
                               -retry $RETRY $seed_rand $quiet"
}
Warn: Logic slice clk_div|CNT[4]~1 is used as a latch, output net: clk_div|CNT[4]~1_combout.
Warn: Logic slice clk_div|CNT[2]~9 is used as a latch, output net: clk_div|CNT[2]~9_combout.
Warn: Logic slice clk_div|CNT[3]~5 is used as a latch, output net: clk_div|CNT[3]~5_combout.
Warn: Logic slice clk_div|CNT[0]~17 is used as a latch, output net: clk_div|CNT[0]~17_combout.
Warn: Logic slice clk_div|CNT[1]~13 is used as a latch, output net: clk_div|CNT[1]~13_combout.
Info: ki_san|COL_POS[1]|Q is identified as a clock gate signal.
Info: ki_san|COL_POS[2]|Q is identified as a clock gate signal.
Info: ki_san|COL_POS[3]|Q is identified as a clock gate signal.
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|ADDR[7] -period 1000.000 ADDR[7].
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|ADDR[5] -period 1000.000 ADDR[5].
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|CLK -period 1000.000 CLK.
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|ADDR[6] -period 1000.000 ADDR[6].
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|WR -period 1000.000 WR.
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|RD -period 1000.000 RD.
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|ADDR[4] -period 1000.000 ADDR[4].
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|IORQ -period 1000.000 IORQ.
Info: Auto constraint: create_clock -name Internal_generated_clock_PPCSB|DBG -period 1000.000 DBG.
Info: Auto constraint: create_generated_clock -name Internal_generated_clock_beep_beep|CLK_DIV_2|Q -divide_by 2 -add -source CLK -master_clock Internal_generated_clock_PPCSB|CLK beep_beep|CLK_DIV_2|Q.
Info: Auto constraint: create_generated_clock -name Internal_generated_clock_ki_san|COL_POS[0]|Q -divide_by 2 -add -source CLK -master_clock Internal_generated_clock_PPCSB|CLK ki_san|COL_POS[0]|Q.
Placement Statistics
 Total  Logic    Tiles   : 14/16 (87.5%)
 Total  Valid    Nets    : 276 (146+130)
 Total  Valid    Fanouts : 1139 (668+471)
 Total  Tile     Fanouts : 264
 Tile   Zip      Fanins  : 12 (4:28)
 Tile   Zip      Fanouts : 18 (2:71)
 Total  Ignored  Nets    : 111
 Total  Valid    Blocks  : 29 (14/15)
 Total  Ignored  Blocks  : 1
 Total  Zip Complexities : 86/427 2.17/186.79
 Avg    Zip   Bottleneck : 2.50 9.21
 Avg    Net   Bottleneck : 9.21 182.07
Iter #1/1 ...
Pass 1 #1/2 ...
Partitioning...
 step = 2, partition : 2,2
....................
 step = 3, partition : 2,2
....................

## CPU time: 0:0:0, REAL time: 0:0:0
Pass 1 #2/2 ...
Partitioning...
 step = 2, partition : 2,2
....................
 step = 3, partition : 2,2
....................

## CPU time: 0:0:0, REAL time: 0:0:1
Pass 2 #1/1 ...
Legalization and Swapping...
..........

## CPU time: 0:0:0, REAL time: 0:0:0
Pass 3 #1/1 ...
Touchup...


## CPU time: 0:0:0, REAL time: 0:0:0
Pass 4 #1/1 ...
Optimization...
............................................................
Finishing...

## CPU time: 0:0:0, REAL time: 0:0:1
Total wire cost after placement: 0:0:0(0:0) 813.856(180.631)+991(0)+249.867 295.25(52.6376)+-67.5

*** Post Placement Timing Report ***
=== User constraints ===


=== Auto constraints ===
Fmax report
  User constraint:   1.000MHz, Fmax: 129.000MHz, Clock: Internal_generated_clock_PPCSB|ADDR[4]
  User constraint:   1.000MHz, Fmax: 130.736MHz, Clock: Internal_generated_clock_PPCSB|ADDR[5]
  User constraint:   1.000MHz, Fmax: 128.205MHz, Clock: Internal_generated_clock_PPCSB|ADDR[6]
  User constraint:   1.000MHz, Fmax: 128.058MHz, Clock: Internal_generated_clock_PPCSB|ADDR[7]
  User constraint:   1.000MHz, Fmax: 141.363MHz, Clock: Internal_generated_clock_PPCSB|CLK
  User constraint:   1.000MHz, Fmax: 115.048MHz, Clock: Internal_generated_clock_PPCSB|IORQ
  User constraint:   1.000MHz, Fmax: 219.248MHz, Clock: Internal_generated_clock_PPCSB|WR
  User constraint:   0.500MHz, Fmax: 161.346MHz, Clock: Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  User constraint:   0.500MHz, Fmax: 731.037MHz, Clock: Internal_generated_clock_ki_san|COL_POS[0]|Q

Clock transfer report:
  Worst setup: 995.439, with clock Internal_generated_clock_PPCSB|ADDR[5]
  Worst setup: 992.926, with clock Internal_generated_clock_PPCSB|CLK
  Worst setup: 1993.802, with clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 1998.632, with clock Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst setup: 994.997, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|ADDR[5]
  Worst setup: 989.869, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.560, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 991.226, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.236, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 990.296, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.987, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 991.653, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.663, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 994.534, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|ADDR[5]
  Worst setup: 989.349, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.040, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 990.706, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1994.716, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 994.710, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|ADDR[5]
  Worst setup: 989.526, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.217, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 990.883, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1994.893, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 993.443, from clock Internal_generated_clock_PPCSB|CLK to Internal_generated_clock_PPCSB|RD
  Worst setup: 1001.288, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|ADDR[5]
  Worst setup: 992.360, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|CLK
  Worst setup: 999.466, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|RD
  Worst setup: 1998.093, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 994.917, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|ADDR[5]
  Worst setup: 989.790, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.481, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|DBG
  Worst setup: 991.147, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.157, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 995.098, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|ADDR[5]
  Worst setup: 989.976, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.667, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|DBG
  Worst setup: 991.333, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.343, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 2005.973, from clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q to Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst setup: 993.846, from clock Internal_generated_clock_ki_san|COL_POS[0]|Q to Internal_generated_clock_PPCSB|CLK

  Worst  hold:  -3.165, with clock Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   1.275, with clock Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.017, with clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   1.275, with clock Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst  hold:  -2.972, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.810, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.539, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.017, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:  -2.815, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.354, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.083, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   3.561, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   4.216, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.945, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.423, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:  -2.946, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   4.041, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.770, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.248, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   0.456, from clock Internal_generated_clock_PPCSB|CLK to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:  -2.608, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   0.314, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   1.623, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   0.892, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.891, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.620, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.098, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   0.712, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.716, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.445, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   3.923, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:  -6.241, from clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q to Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst  hold:   1.275, from clock Internal_generated_clock_ki_san|COL_POS[0]|Q to Internal_generated_clock_PPCSB|CLK

Coverage report
  User constraints covered 0 connections out of 823 total, coverage: 0.0%
  Auto constraints covered 637 connections out of 823 total, coverage: 77.4%


Hold from beep_beep|CLK_DIV_2 to beep_beep|CLK_DIV_2, clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q to Internal_generated_clock_ki_san|COL_POS[0]|Q, constraint 0.000
  Slack:  -6.241
    Arrival Time:    0.000
    Required Time:   6.241

*** End Timing Report ***

route_design -dump ./alta_db/route.tx -replace ./alta_db/replace.tx 
Route Design Statistics
 Total Routing Nets : 276
 Fanout     Average : 3.13 (1..34)
 Max   Fanout  Net  : ki_san|COL_POS[0]
 Logic       Slices : 179/256 (69.9%)

Routing...
 Budget Useful Skew...
=== User constraints ===
=== Auto constraints ===
Fmax report
  User constraint:   1.000MHz, Fmax: 129.000MHz, Clock: Internal_generated_clock_PPCSB|ADDR[4]
  User constraint:   1.000MHz, Fmax: 130.736MHz, Clock: Internal_generated_clock_PPCSB|ADDR[5]
  User constraint:   1.000MHz, Fmax: 128.205MHz, Clock: Internal_generated_clock_PPCSB|ADDR[6]
  User constraint:   1.000MHz, Fmax: 128.058MHz, Clock: Internal_generated_clock_PPCSB|ADDR[7]
  User constraint:   1.000MHz, Fmax: 141.363MHz, Clock: Internal_generated_clock_PPCSB|CLK
  User constraint:   1.000MHz, Fmax: 115.048MHz, Clock: Internal_generated_clock_PPCSB|IORQ
  User constraint:   1.000MHz, Fmax: 219.248MHz, Clock: Internal_generated_clock_PPCSB|WR
  User constraint:   0.500MHz, Fmax: 161.346MHz, Clock: Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  User constraint:   0.500MHz, Fmax: 731.037MHz, Clock: Internal_generated_clock_ki_san|COL_POS[0]|Q

## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 1/1, route#: 276, violation# : 69, overflow# : 61, conflict# : 86, node#: 1454
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 2/2, route#: 276, violation# : 60, overflow# : 55, conflict# : 71, node#: 1481
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 3/3, route#: 276, violation# : 44, overflow# : 43, conflict# : 39, node#: 1504
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 4/4, route#: 276, violation# : 5, overflow# : 5, conflict# : 7, node#: 1559
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 5/5, route#: 276, violation# : 5, overflow# : 5, conflict# : 7, node#: 1558
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 6/6, route#: 276, violation# : 2, overflow# : 2, conflict# : 4, node#: 1561
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 7/7, route#: 276, violation# : 2, overflow# : 2, conflict# : 4, node#: 1561
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 8/5, route#: 5, violation# : 3, overflow# : 3, conflict# : 5, node#: 1561
## CPU time: 0:0:0, REAL time: 0:0:0
 iter = 9/6, route#: 2, violation# : 0, overflow# : 0, conflict# : 0, node#: 1563
Optimizing...
...

Done

*** Post Routing Timing Report ***
=== User constraints ===


=== Auto constraints ===
Fmax report
  User constraint:   1.000MHz, Fmax: 121.419MHz, Clock: Internal_generated_clock_PPCSB|ADDR[4]
  User constraint:   1.000MHz, Fmax: 119.332MHz, Clock: Internal_generated_clock_PPCSB|ADDR[5]
  User constraint:   1.000MHz, Fmax: 121.374MHz, Clock: Internal_generated_clock_PPCSB|ADDR[6]
  User constraint:   1.000MHz, Fmax: 122.264MHz, Clock: Internal_generated_clock_PPCSB|ADDR[7]
  User constraint:   1.000MHz, Fmax: 133.441MHz, Clock: Internal_generated_clock_PPCSB|CLK
  User constraint:   1.000MHz, Fmax: 114.652MHz, Clock: Internal_generated_clock_PPCSB|IORQ
  User constraint:   1.000MHz, Fmax: 187.333MHz, Clock: Internal_generated_clock_PPCSB|WR
  User constraint:   0.500MHz, Fmax: 183.221MHz, Clock: Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  User constraint:   0.500MHz, Fmax: 730.972MHz, Clock: Internal_generated_clock_ki_san|COL_POS[0]|Q

Clock transfer report:
  Worst setup: 992.506, with clock Internal_generated_clock_PPCSB|CLK
  Worst setup: 994.662, with clock Internal_generated_clock_PPCSB|IORQ
  Worst setup: 1994.542, with clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 1998.632, with clock Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst setup: 988.915, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.220, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 993.816, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|IORQ
  Worst setup: 990.018, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1994.890, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 989.612, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.917, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 994.506, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|IORQ
  Worst setup: 990.715, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.587, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 988.715, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.020, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 993.641, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|IORQ
  Worst setup: 989.818, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1994.687, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 989.245, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.550, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|DBG
  Worst setup: 994.102, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|IORQ
  Worst setup: 990.348, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.220, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 992.140, from clock Internal_generated_clock_PPCSB|CLK to Internal_generated_clock_PPCSB|RD
  Worst setup: 991.777, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|CLK
  Worst setup: 1001.163, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|IORQ
  Worst setup: 999.247, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|RD
  Worst setup: 1998.368, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 989.781, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|CLK
  Worst setup: 996.086, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|DBG
  Worst setup: 990.884, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.756, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 989.188, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|CLK
  Worst setup: 995.493, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|DBG
  Worst setup: 994.041, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|IORQ
  Worst setup: 990.291, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|RD
  Worst setup: 1995.163, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst setup: 2005.812, from clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q to Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst setup: 993.414, from clock Internal_generated_clock_ki_san|COL_POS[0]|Q to Internal_generated_clock_PPCSB|CLK

  Worst  hold:  -3.547, with clock Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   1.275, with clock Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.031, with clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   1.275, with clock Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst  hold:  -3.300, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   4.084, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.761, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.262, from clock Internal_generated_clock_PPCSB|ADDR[4] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:  -2.840, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.401, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.078, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   3.579, from clock Internal_generated_clock_PPCSB|ADDR[5] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   4.233, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.910, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.411, from clock Internal_generated_clock_PPCSB|ADDR[6] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:  -2.793, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.842, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.519, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.020, from clock Internal_generated_clock_PPCSB|ADDR[7] to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   0.123, from clock Internal_generated_clock_PPCSB|CLK to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:  -2.633, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   0.314, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   1.451, from clock Internal_generated_clock_PPCSB|DBG to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   0.254, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.258, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   1.935, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   3.436, from clock Internal_generated_clock_PPCSB|IORQ to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:   0.875, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|ADDR[6]
  Worst  hold:   3.907, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|CLK
  Worst  hold:   2.584, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_PPCSB|DBG
  Worst  hold:   4.085, from clock Internal_generated_clock_PPCSB|WR to Internal_generated_clock_beep_beep|CLK_DIV_2|Q
  Worst  hold:  -6.057, from clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q to Internal_generated_clock_ki_san|COL_POS[0]|Q
  Worst  hold:   1.275, from clock Internal_generated_clock_ki_san|COL_POS[0]|Q to Internal_generated_clock_PPCSB|CLK

Coverage report
  User constraints covered 0 connections out of 823 total, coverage: 0.0%
  Auto constraints covered 637 connections out of 823 total, coverage: 77.4%


Hold from beep_beep|CLK_DIV_2 to beep_beep|CLK_DIV_2, clock Internal_generated_clock_beep_beep|CLK_DIV_2|Q to Internal_generated_clock_ki_san|COL_POS[0]|Q, constraint 0.000
  Slack:  -6.057
    Arrival Time:    0.000
    Required Time:   6.057

*** End Timing Report ***

> 
> date_time
Sat Oct 22 17:21:56 2022
> if { $FLOW != "CHECK" } {
if { $FLOW != "PROBE" } {
#report_timing -verbose 1 -file $::alta_work/timing.rpt.gz
report_timing -verbose 2 -setup -file $::alta_work/setup.rpt.gz
report_timing -verbose 2 -setup -brief -file $::alta_work/setup_summary.rpt.gz
report_timing -verbose 2 -hold -file $::alta_work/hold.rpt.gz
report_timing -verbose 2 -hold -brief -file $::alta_work/hold_summary.rpt.gz

set ta_report_auto_constraints 0
report_timing -fmax -file $::alta_work/fmax.rpt
report_timing -xfer -file $::alta_work/xfer.rpt
set ta_report_auto_constraints $ta_report_auto

#set ta_coverage_limit "0.95 0.90"
set ta_dump_uncovered 1
report_timing -verbose 1 -coverage >! $::alta_work/coverage.rpt.gz
#unset ta_coverage_limit
unset ta_dump_uncovered


if { ! [info exists rt_report_timing_fast] } {
  set rt_report_timing_fast false
}
if { $rt_report_timing_fast } {
  set_timing_corner fast
  route_delay -quiet
  report_timing -verbose 2 -setup -file $::alta_work/setup_fast.rpt.gz
  report_timing -verbose 2 -setup -brief -file $::alta_work/setup_fast_summary.rpt.gz
  report_timing -verbose 2 -hold -file $::alta_work/hold_fast.rpt.gz
  report_timing -verbose 2 -hold -brief -file $::alta_work/hold_fast_summary.rpt.gz
  set ta_report_auto_constraints 0
  report_timing -fmax -file $::alta_work/fmax_fast.rpt
  report_timing -xfer -file $::alta_work/xfer_fast.rpt
  set ta_report_auto_constraints $ta_report_auto
}

write_routed_design "${RESULT_DIR}/${RESULT}_routed.v"
}

bitgen normal -prg "${RESULT_DIR}/${RESULT}.prg" -bin "${RESULT_DIR}/${RESULT}.bin"
bitgen sram -prg "${RESULT_DIR}/${RESULT}_sram.prg"
bitgen download -bin "${RESULT_DIR}/${RESULT}.bin" -svf "${RESULT_DIR}/${RESULT}_download.svf"
generate_binary -slave "${RESULT_DIR}/${RESULT}_slave.rbf" \
                -inputs "${RESULT_DIR}/${RESULT}.bin" -reverse
generate_binary -master "${RESULT_DIR}/${RESULT}_master.bin" \
                -inputs "${RESULT_DIR}/${RESULT}.bin"
generate_programming_file "${RESULT_DIR}/${RESULT}_master.bin" -prg "${RESULT_DIR}/${RESULT}_master.prg" \
  -as "${RESULT_DIR}/${RESULT}_master_as.prg" -hybrid "${RESULT_DIR}/${RESULT}_hybrid.prg"
}
Warn: User constraints coverage is too low at 0.0%.
Info: Using config file ./PPCSB.bin to generate download file ./PPCSB_download.svf.
> 
> if { [file exists "./${DESIGN}.post.asf"] } {
  alta::tcl_highlight "Using post-ASF file ${DESIGN}.post.asf.\n"
  source "./${DESIGN}.post.asf"
}
Using post-ASF file PPCSB.post.asf.
> date_time
Sat Oct 22 17:21:57 2022
> exit

Total 0 fatals, 0 errors, 7 warnings, 19 infos.
